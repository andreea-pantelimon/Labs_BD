Sa se efectueze o lista de premiere pentru angajatii care nu primesc comision si care au venit in firma cu cel putin 2 luni dupa sefii lor directi.

Astfel:

- daca gradul salarial al angajatului este 1, prima va fi 500

- daca gradul salarial al angajatului este 2, prima va fi 300

- daca gradul salarial al angajatului este 3, prima va fi 100

- restul angajatilor nu primesc prima

Antetul listei va fi:

Nume ang, Comision ang, Data angajare, Data angajare sef, Grad salarial, PRIMA

Sa se rezolve prin doua metode distincte folosind diverse functii SQL.

Pentru testare se va utiliza baza de date a userului scott, formata din tabelele EMP, DEPT si SALGRADE.

------------------------------------------------------------------------

Pentru fiecare angajat, care are salariul in unul din gradele 3, 4 sau 5, sa se calculeze un calificativ, astfel:

- daca data angajarii este anterioara datei angajarii lui BLAKE, atunci calificativul este FOARTE APRECIAT

- daca data angajarii este ulterioara sau egala cu data angajarii lui BLAKE, atunci calificativul este APRECIAT

- daca angajatul primeste comision, atunci calificativul este PREMIAT

Lista se va afisa cu antetul:

Nume, Comision, Grad salarial, Data angajare, Data angajare BLAKE, Calificativ

Sa se rezolve prin doua metode distincte folosind diverse functii SQL.

Pentru testare se va utiliza baza de date a userului scott, formata din tabelele EMP, DEPT si SALGRADE.

-------------------------------------------------------------------------

Sa se acorde o prima pentru fiecare sef, care are cel putin 3 subalterni: numele, denumirea departamentului din care face parte, PRIMA, numarul subalternilor.

Prima se calculeaza ca fiind jumatate din salariu, truncheata la valori intregi.

Lista se va afisa cu antetul:

Sef, Denumire departament, PRIMA, Nr subalterni

Sa se rezolve prin doua metode distincte folosind diverse functii SQL.

Pentru testare se va utiliza baza de date a userului scott, formata din tabelele EMP, DEPT si SALGRADE

---------------------------------------------------------------------------

Sa se afiseze pentru toti angajatii care s-au angajat inaintea sefului lor  si au gradul de salarizare mai mare sau egal cu 3, numarul intreg de zile de concediu la care au dreptul,  calculat dupa formula  zile=abs(sin(sqrt(vec*grad))*150).

unde vec=vechime in ani nerotunjita

grad=gradul din grila de salarizare

Lista are antetul nume, grad, concediu si se ordoneaza alfabetic.

Sa se rezolve prin doua metode distincte folosind diverse functii SQL.

Pentru testare se va utiliza baza de date a userului scott, formata din tabelele EMP, DEPT si SALGRADE.

---------------------------------------------------------------------------

Cerinta:Pentru angajatii ce au numele de lungime mai mare ca a sefului lor (daca nu au sef se considera ca indeplinesc aceasta conditie), faceti o lista cu:
- numele departamentului in care este seful, scris cu litere mari (NUME_DEPT_SEF)
- cate luni complete au lucrat in firma (LUNI_LUCRATE_ANG)
- initiala numelui lor, ca litera mica (INITIALA_ANG)
-ultima cifra a venitului lor (ULTIMA_CIFRA_SALARIU)
Se se rezolve prin doua metode  (scripturi) distincte folosind functii SQL.
Testarea solutiilor se va face pe tabelele EMP, DEPT si SALGRADE.

Rezolvare:
/* Varianta 1 */

SELECT upper(d.dname) NUME_DEPT_SEF,
months_between(sysdate,e1.hiredate) LUNI_LUCRATE_ANG,
lower(substr(e1.ename, 1, 1)) INITIALA_ANG, 
substr((e1.sal+nvl(e1.comm,0)), length((e1.sal+nvl(e1.comm,0))), 1) ULTIMA_CIFRA_SALARIU
FROM emp e1, emp e2, dept d
WHERE e1.mgr = e2.empno and length(e1.ename) > length(e2.ename) and e2.deptno = d.deptno;


/* Varianta 2 */

define venit = (e1.sal+nvl(e1.comm,0));

select upper(d.dname) NUME_DEPT_SEF,
months_between(sysdate,e1.hiredate) LUNI_LUCRATE_ANG,
lower(substr(e1.ename, 1, 1)) INITIALA_ANG, 
substr(&venit, length(&venit), 1) ULTIMA_CIFRA_SALARIU
from emp e1
	inner join emp e2
		on e1.mgr = e2.empno
		inner join dept d
			on e2.deptno = d.deptno
where length(e1.ename) > length(e2.ename);

undefine venit